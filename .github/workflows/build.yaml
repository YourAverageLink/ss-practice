on:
  - push
  - pull_request
  - workflow_dispatch

jobs:
  build:
    strategy:
      matrix:
        include:
          - name: Windows Build
            os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact: windows
            artifact_suffix: ""
            executable_suffix: ".exe"
          - name: MacOS Build x64
            os: macos-13
            target: x86_64-apple-darwin
            artifact: macos
            artifact_suffix: _intel
            executable_suffix: ""
          - name: MacOS Build arm64
            os: macos-14
            target: aarch64-apple-darwin
            artifact: macos
            artifact_suffix: _apple_silicon
            executable_suffix: ""
          - name: Linux Build
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact: linux
            artifact_suffix: ""
            executable_suffix: ""
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Check formatting
        run: cargo fmt --check
      # No tests are currently included
      # - name: Run tests
      #   run: cargo test
      - name: Build release
        run: cargo build --release --target ${{ matrix.target }}
      - name: Create distribution directory
        run: mkdir -p dist
        shell: bash
      - name: Copy executable to dist
        run: |
          cp target/${{ matrix.target }}/release/ss-practice${{ matrix.executable_suffix }} dist/
        shell: bash
      - name: Copy README
        run: cp README.md dist/
        shell: bash
      - uses: SebRollen/toml-action@v1.2.0
        id: read_toml
        with:
          file: "Cargo.toml"
          field: "package.version"
      - uses: actions/upload-artifact@v4
        with:
          name: SSGZ ${{ steps.read_toml.outputs.value }} (${{ matrix.artifact }}${{ matrix.artifact_suffix }})
          path: dist